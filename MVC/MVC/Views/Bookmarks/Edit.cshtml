@model MVC.Models.EditBookmarkViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.URL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.URL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.URL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewCategory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewCategory, new { htmlAttributes = new { @class = "form-control", id = "newCategory" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Categories, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="categoryDropDownList" name="categorySelected">
                    <option value="Select">Select</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script>
        $(function () {
            var selected = $("#categoryDropDownList").val('@Model.SelectedCategory');
            AjaxCall('/Bookmarks/GetCategories', null).done(function (response) {
                if (response.length > 0) {
                    $('#categoryDropDownList').html('');
                    var options = '';
                    options += '<option value="Select">Select</option>';
                    for (var i = 0; i < response.length; i++) {
                        options += '<option value="' + response[i].ID + '">' + response[i].Name + '</option>';
                    }
                    $('#categoryDropDownList').append(options);
                }
            }).fail(function (error) {
                alert(error.StatusText);
            });

            $('#newCategory').on("change", function () {
                var category = $('#newCategory').val();
                var obj = { category: category };
                AjaxCall('/Bookmarks/AddCategory', JSON.stringify(obj), 'POST').done(function (response) {
                    if (response.length > 0) {
                        $('#categoryDropDownList').html('');
                        var options = '';
                        options += '<option value="Select">Select</option>';
                        for (var i = 0; i < response.length; i++) {
                            options += '<option value="' + response[i].ID + '">' + response[i].Name + '</option>';
                        }
                        $('#categoryDropDownList').append(options);
                    }
                }).fail(function (error) {
                    alert(error.StatusText);
                });
            });

        });

        function AjaxCall(url, data, type) {
            return $.ajax({
                url: url,
                type: type ? type : 'GET',
                data: data,
                contentType: 'application/json'
            });
        }
    </script>
}
